// each of these properties listed here (except for 'language') have a key and a value.
// The value refers to a corresponding key in the language files (see the 'lang' directory)
// The string in the language file is what is displayed in the app UI
export const propertyMap = {
	'additional-info': {
		'at-capacity': 'resource-property.at-capacity',
		'geo-near-public-transit': 'resource-property.near-public-transportation',
		'geo-public-transit-description': 'resource-property.transit-details',
		'has-confidentiality-policy': 'resource-property.has-confidentiality-policy',
		'time-walk-in': 'resource-property.walk-ins-welcome',
	},
	community: {
		'community-adults': 'resource-property.community-adult',
		'community-africa-immigrant': 'resource-property.community-immigrants-from-africa',
		'community-african-american': 'resource-property.community-african-american',
		'community-api': 'resource-property.community-api',
		'community-arabic-speakers': 'resource-property.community-arabic-speakers',
		'community-asexual': 'resource-property.community-asexual',
		'community-asia-immigrant': 'resource-property.community-immigrants-from-asia',
		'community-asylee': 'resource-property.community-asylee',
		'community-asylum-seeker': 'resource-property.community-asylum-seeker',
		'community-bipoc': 'resource-property.community-bipoc',
		'community-bisexual': 'resource-property.community-bisexual',
		'community-black': 'resource-property.community-black',
		'community-citizens': 'resource-property.community-citizens',
		'community-conversion-therapy-survivors': 'resource-property.community-conversion-therapy-survivors',
		'community-daca-recipient-seeker': 'resource-property.community-daca-seeker',
		'community-detained-immigrant': 'resource-property.community-detained-immigrants',
		'community-disabled': 'resource-property.community-people-with-disabilities',
		'community-french-speakers': 'resource-property.community-french-speakers',
		'community-gay': 'resource-property.community-gay',
		'community-gender-nonconforming': 'resource-property.community-gender-nonconforming',
		'community-residents-green-card-holders': 'resource-property.community-residents-green-card-holders',
		'community-hiv-aids': 'resource-property.community-individuals-with-hiv',
		'community-homeless': 'resource-property.community-homeless-individuals',
		'community-human-trafficking-survivor': 'resource-property.community-human-trafficking-survivors',
		'community-intersex': 'resource-property.community-intersex',
		'community-latin-america-immigrant': 'resource-property.community-latin-immigrants',
		'community-latinx': 'resource-property.community-latinx',
		'community-lesbian': 'resource-property.community-lesbian',
		'community-lgbtq-youth': 'resource-property.community-lgbtq-youth',
		'community-lgbtq-youth-caregivers': 'resource-property.community-lgbtq-youth-caregivers',
		'community-middle-east-immigrant': 'resource-property.community-middle-east-immigrants',
		'community-muslim': 'resource-property.community-muslim',
		'community-native-american-two-spirit': 'resource-property.community-native-american-two-spirit',
		'community-nonbinary': 'resource-property.community-nonbinary',
		'community-queer': 'resource-property.community-queer',
		'community-refugee': 'resource-property.community-refugees',
		'community-russia-immigrant': 'resource-property.community-russian-immigrants',
		'community-russian-speakers': 'resource-property.community-russian-speakers',
		'community-seniors': 'resource-property.community-seniors',
		'community-sex-workers': 'resource-property.community-sex-workers',
		'community-spanish-speakers': 'resource-property.community-spanish-speakers',
		'community-teens': 'resource-property.community-teenagers',
		'community-transfeminine': 'resource-property.community-transfeminine',
		'community-transgender': 'resource-property.community-transgender',
		'community-trans-youth': 'resource-property.community-trans-youth',
		'community-trans-youth-caregivers': 'resource-property.community-trans-youth-caregivers',
		'community-transmasculine': 'resource-property.community-transmasculine',
		'community-undocumented': 'resource-property.community-undocumented',
		'community-unaccompanied-minors': 'resource-property.community-unaccompanied-minors',
	},
	cost: {
		'cost-fees': 'resource-property.community-cost-heading',
		'cost-free': 'resource-property.free-of-cost',
	},
	eligibility: {
		'elig-age-or-over': 'resource-property.ages-over',
		'elig-age-or-under': 'resource-property.ages-under',
		'elig-age-range': 'resource-property.age',
		'elig-description': '[value]',
		'time-appointment-required': 'resource-property.appointment-required',
	},
	language: {
		'lang-american-sign-language': { name: 'American Sign Language' },
		'lang-all-languages-by-interpreter': '[value]',
		'lang-afrikaans': { code: 'aa' },
		'lang-albanian': { code: 'sq' },
		'lang-amharic': { code: 'am' },
		'lang-arabic': { code: 'ar' },
		'lang-armenian': { code: 'hy' },
		'lang-azerbaijani': { code: 'az' },
		'lang-bangali': { code: 'bn' },
		'lang-berber': { name: 'Berber' },
		'lang-bhutanese': { code: 'dz' },
		'lang-bosnian': { code: 'bs' },
		'lang-bulgarian': { code: 'bg' },
		'lang-burmese': { code: 'my' },
		'lang-cambodian': { code: 'km' },
		'lang-cantonese': { name: 'Cantonese' },
		'lang-catalan': { code: 'ca' },
		'lang-cebuano': { name: 'Cebuano' },
		'lang-chin': { name: 'Chin' },
		'lang-chiu-chow': { name: 'Chiuchow' },
		'lang-creole': { name: 'Creole' },
		'lang-croatian': { code: 'hr' },
		'lang-czech': { code: 'cs' },
		'lang-dari': { name: 'Dari' },
		'lang-dinka': { name: 'Dinka' },
		'lang-dutch': { code: 'nl' },
		'lang-english': { code: 'en' },
		'lang-eritrean': { code: 'aa' },
		'lang-farsi': { code: 'fa' },
		'lang-fiji': { code: 'fj' },
		'lang-flaams': { name: 'Flaams' },
		'lang-french': { code: 'fr' },
		'lang-fukienese': { name: 'Fukienese' },
		'lang-ga': { name: 'Ga' },
		'lang-german': { code: 'de' },
		'lang-greek': { code: 'el' },
		'lang-guarani': { code: 'gu' },
		'lang-gujarati': { name: 'Gujarati' },
		'lang-hebrew': { code: 'he' },
		'lang-hindi': { code: 'hi' },
		'lang-hmong': { name: 'Hmong' },
		'lang-hunan': { name: 'Hunan' },
		'lang-hungarian': { code: 'hu' },
		'lang-ilocano': { name: 'Iloko' },
		'lang-indonesian': { code: 'id' },
		'lang-italian': { code: 'it' },
		'lang-ixil': { name: 'Ixil' },
		'lang-japanese': { code: 'ja' },
		'lang-karen': { name: 'Karen' },
		'lang-karenni': { name: 'Karenni' },
		'lang-katchi': { name: 'Katchi' },
		'lang-khmer': { code: 'km' },
		'lang-kinyarwanda': { code: 'rw' },
		'lang-kirundi': { name: 'Kirundi' },
		'lang-kiswahili': { name: 'Kiswahili' },
		'lang-korean': { code: 'ko' },
		'lang-kurdish': { code: 'ku' },
		'lang-kurmanji': { name: 'Kurmanji' },
		'lang-ladino': { name: 'Ladino' },
		'lang-laotian': { code: 'lo' },
		'lang-lingala': { code: 'ln' },
		'lang-lithuanian': { code: 'lt' },
		'lang-malagasy': { code: 'mg' },
		'lang-malinke': { name: 'Malinke' },
		'lang-mam': { name: 'Mayan (Mam)' },
		'lang-mandarin': { name: 'Mandarin' },
		'lang-mandingo': { name: 'Mandingo' },
		'lang-marathi': { code: 'mr' },
		'lang-maya': { name: 'Maya' },
		'lang-mexican-sign-language': { name: 'Mexican Sign Language (MSL)' },
		'lang-mien': { name: 'Mien' },
		'lang-mixteco': { name: 'Mixteco' },
		'lang-mongolian': { code: 'mn' },
		'lang-nepali': { code: 'ne' },
		'lang-oromo': { code: 'om' },
		'lang-pashto': { code: 'ps' },
		'lang-polish': { code: 'pl' },
		'lang-portuguese': { code: 'pt' },
		'lang-pulaar': { name: 'Pulaar' },
		'lang-punjabi': { code: 'pa' },
		'lang-rohingya': { name: 'Rohingya' },
		'lang-quechua': { code: 'qu' },
		'lang-romanian': { code: 'ro' },
		'lang-russian': { code: 'ru' },
		'lang-samoan': { code: 'sm' },
		'lang-senufo': { name: 'Senufo' },
		'lang-serbian': { code: 'sr' },
		'lang-shona': { code: 'sn' },
		'lang-sinhala': { code: 'si' },
		'lang-somali': { code: 'so' },
		'lang-spanish': { code: 'es' },
		'lang-swedish': { code: 'sv' },
		'lang-tagalog': { code: 'tl' },
		'lang-taiwanese': { name: 'Taiwanese' },
		'lang-tajiki': { code: 'tg' },
		'lang-tamazight': { name: 'Tamazight' },
		'lang-tamil': { code: 'ta' },
		'lang-telugu': { code: 'te' },
		'lang-thai': { code: 'th' },
		'lang-tibetan': { code: 'bo' },
		'lang-tigrigna': { code: 'ti' },
		'lang-tigrinya': { code: 'ti' },
		'lang-toisanese': { name: 'Toisanese' },
		'lang-tongan': { code: 'to' },
		'lang-turkish': { code: 'tr' },
		'lang-twi': { code: 'tw' },
		'lang-ukrainian': { code: 'uk' },
		'lang-urdu': { code: 'ur' },
		'lang-vietnamese': { code: 'vi' },
		'lang-wolof': { code: 'wo' },
		'lang-yiddish': { code: 'yi' },
		'lang-yoruba': { code: 'yo' },
	},
	required: {
		'req-medical-insurance': 'resource-property.medical-insurance',
		'req-photo-id': 'resource-property.photo-id',
		'req-proof-of-age': 'resource-property.proof-of-age',
		'req-proof-of-income': 'resource-property.proof-of-income',
		'req-proof-of-residence': 'resource-property.proof-of-residence',
		'req-referral': 'resource-property.referral',
	},
}

export const propertyMapKeys = Object.keys(propertyMap).reduce((result, key) => {
	const properties = propertyMap[key]

	result[key] = Object.keys(properties)

	return result
}, {})

/**
 * Combine a list of properties
 *
 * @param {Array[]} list List of properties
 * @returns {Object} An object of all of the properties
 */
export const combineProperties = (list) => {
	return (
		list?.reduce((result, item) => {
			if (item?.properties) {
				return { ...result, ...item.properties }
			}

			return result
		}, {}) || {}
	)
}
