//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Project "InReach" {
  database_type: 'PostgreSQL'
  Note: ''
}

Table Account {
  id String [pk, note: '@zod.custom(imports.cuid)']
  type String [not null]
  provider String [not null]
  providerAccountId String [not null]
  refresh_token String
  access_token String
  expires_at Int
  token_type String
  scope String
  id_token String
  session_state String
  userId String [not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  indexes {
    (provider, providerAccountId) [unique]
  }

  Note: 'NextAuth Account **DO NOT ALTER**'
}

Table Session {
  id String [pk, note: '@zod.custom(imports.cuid)']
  sessionToken String [unique, not null]
  expires DateTime [not null]
  userId String [not null, note: '@zod.custom(imports.cuid)']

  Note: 'NextAuth Session **DO NOT ALTER**'
}

Table VerificationToken {
  identifier String [not null]
  token String [unique, not null]
  expires DateTime [not null]

  indexes {
    (identifier, token) [unique]
  }

  Note: 'NextAuth Verification Token **DO NOT ALTER**'
}

Table User {
  id String [pk, note: '@zod.custom(imports.cuid)']
  firstName String
  lastName String
  email String [unique, not null]
  emailVerified DateTime
  image String
  legacyId String [unique, note: 'old ID from MongoDB']
  birthYear Int
  reasonForJoin String
  currentCity String
  currentGovDistId String [note: '@zod.custom(imports.cuid)']
  currentCountryId String [note: '@zod.custom(imports.cuid)']
  legacyHash String
  legacySalt String
  migrateDate DateTime
  immigrationId String [note: '@zod.custom(imports.cuid)']
  roleId String [not null, note: '@zod.custom(imports.cuid)']
  userTypeId String [not null, note: '@zod.custom(imports.cuid)']
  langPrefId String [not null, note: '@zod.custom(imports.cuid)']
  sourceId String [note: '@zod.custom(imports.cuid)']
  associatedOrgId String [note: '@zod.custom(imports.cuid)']
  orgTitleId String [note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'NextAuth User'
}

Table UserRole {
  id String [pk, note: '@zod.custom(imports.cuid)']
  name String [unique, not null]
  tag String [unique, not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'User Role - Contains array of granular permissions
Internal use'
}

Table PermissionAsset {
  id String [pk, note: '@zod.custom(imports.cuid)']
  userId String [not null, note: '@zod.custom(imports.cuid)']
  permissionId String [not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'For permissions that are attached to certain records
example: User is only able to edit one organization.'
}

Table PermissionItem {
  id String [pk, note: '@zod.custom(imports.cuid)']
  name String [unique, not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Permission Definition'
}

Table UserType {
  id String [pk, note: '@zod.custom(imports.cuid)']
  type String [unique, not null]
  keyId String [unique, not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'User Info - account type (seeker, org, lawyer, etc.)
use shorthand descriptions - front-end displayable text is defined in Translations'
}

Table UserTitle {
  id String [pk, note: '@zod.custom(imports.cuid)']
  title String [unique, not null]
  searchable Boolean [not null, default: false]
  keyId String [unique, not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'User Info - professional title
this will be a searchable list'
}

Table UserEthnicity {
  id String [pk, note: '@zod.custom(imports.cuid)']
  ethnicity String [unique, not null, note: 'use shorthand descriptions - front-end displayable text is defined in Translations']
  keyId String [unique, not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'User demographics - Ethnicity'
}

Table UserImmigration {
  id String [pk, note: '@zod.custom(imports.cuid)']
  status String [unique, not null, note: 'use shorthand descriptions - front-end displayable text is defined in Translations']
  keyId String [unique, not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'User demographics - Immigration Status'
}

Table UserSOGIdentity {
  id String [pk, note: '@zod.custom(imports.cuid)']
  identifyAs String [unique, not null, note: 'use shorthand descriptions - front-end displayable text is defined in Translations']
  keyId String [unique, not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'User demographics - Sexual orientation / Identity'
}

Table UserCommunity {
  id String [pk, note: '@zod.custom(imports.cuid)']
  community String [unique, not null, note: 'use shorthand descriptions - front-end displayable text is defined in Translations']
  keyId String [unique, not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'User demographics - Community'
}

Table UserSavedList {
  id String [pk, note: '@zod.custom(imports.cuid)']
  name String [not null]
  visibility UserSavedListVisibility [not null, default: 'PRIVATE']
  sharedLinkKey String [unique, note: 'Generated string to share a list via link']
  ownedById String [not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'User\'s list(s) of saved resources.'
}

Table UserMail {
  id String [pk, note: '@zod.custom(imports.cuid)']
  toUserId String [not null, note: '@zod.custom(imports.cuid)']
  read Boolean [not null, default: false]
  subject String [not null]
  body String [not null]
  from String
  fromUserId String [note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table Organization {
  id String [pk, note: '@zod.custom(imports.cuid)']
  legacyId String [unique, note: 'old ID from MongoDB']
  name String [not null]
  slug String [unique, not null, note: '@zod.regex(/^[a-z0-9]+(?:-[a-z0-9]+)*$/gm)']
  deleted Boolean [not null, default: false]
  published Boolean [not null, default: false]
  lastVerified DateTime
  outsideApiId String [note: '@zod.custom(imports.cuid)']
  apiIdentifier String
  sourceId String [not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Main organization definition'
}

Table OrgDescription {
  id String [pk, note: '@zod.custom(imports.cuid)']
  orgId String [unique, not null, note: '@zod.custom(imports.cuid)']
  keyId String [unique, not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Description translations
this does not use i18next'
}

Table OrgEmail {
  id String [pk, note: '@zod.custom(imports.cuid)']
  firstName String [not null]
  lastName String [not null]
  primary Boolean [not null]
  email String [not null]
  published Boolean [not null, default: true]
  titleId String [not null, note: '@zod.custom(imports.cuid)']
  orgId String [not null, note: '@zod.custom(imports.cuid)']
  userId String [unique, note: '@zod.custom(imports.cuid)']
  orgLocationId String [note: '@zod.custom(imports.cuid)']
  orgLocationOnly Boolean [not null, default: false, note: 'associated only with location and not overall organization (for large orgs w/ multiple locations)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Organization email contacts - can be general or location specific'
}

Table OrgPhone {
  id String [pk, note: '@zod.custom(imports.cuid)']
  number String [not null]
  published Boolean [not null, default: true]
  primary Boolean [not null, default: false]
  countryId String [not null, note: '@zod.custom(imports.cuid)']
  phoneTypeId String [not null, note: '@zod.custom(imports.cuid)']
  organizationId String [not null, note: '@zod.custom(imports.cuid)']
  userId String [unique, note: '@zod.custom(imports.cuid)']
  orgLocationId String [note: '@zod.custom(imports.cuid)']
  orgLocationOnly Boolean [not null, default: false, note: 'associated only with location and not overall organization (for large orgs w/ multiple locations)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Org phone numbers - can be general or location specific'
}

Table OrgSocialMedia {
  id String [pk, note: '@zod.custom(imports.cuid)']
  username String [not null]
  url String [not null]
  serviceId String [not null, note: '@zod.custom(imports.cuid)']
  organizationId String [not null, note: '@zod.custom(imports.cuid)']
  orgLocationId String
  orgLocationOnly Boolean [not null, default: false, note: 'associated only with location and not overall organization (for large orgs w/ multiple locations)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Organization\'s social media links'
}

Table OrgLocation {
  id String [pk, note: '@zod.custom(imports.cuid)']
  name String
  street1 String [not null]
  street2 String
  city String [not null]
  postCode String
  govDistId String [note: '@zod.custom(imports.cuid)']
  countryId String [not null, note: '@zod.custom(imports.cuid)']
  longitude Decimal [not null]
  latitude Decimal [not null]
  geoJSON Json [not null, note: '@zod.custom(imports.GeoJSONSchema)']
  published Boolean [not null, default: true]
  orgId String [unique, not null, note: '@zod.custom(imports.cuid)']
  outsideApiId String [note: '@zod.custom(imports.cuid)']
  apiLocationId String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Org location information'
}

Table OrgPhoto {
  id String [pk, note: '@zod.custom(imports.cuid)']
  src String [not null]
  height Int
  width Int
  published Boolean [not null, default: false]
  orgId String [note: '@zod.custom(imports.cuid)']
  orgLocationId String [note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Organization photos'
}

Table OrgHours {
  id String [pk, note: '@zod.custom(imports.cuid)']
  dayIndex Int [not null, default: 0, note: 'Sun 0, Mon 1, Tue 2, Wed 3, Thu 3, Fri 4, Sat 6']
  start DateTime [not null]
  end DateTime [not null]
  orgLocId String [note: '@zod.custom(imports.cuid)']
  orgServiceId String [note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Organization location/service hours
day is stored as integer [0-6], Sunday = 0
start/end times are stored as RFC 3339 Timestamp (without zone)
as local time. Any timezone offset will be handled by runtime logic'
}

Table OrgService {
  id String [pk, note: '@zod.custom(imports.cuid)']
  published Boolean [not null, default: false]
  serviceId String [not null, note: '@zod.custom(imports.cuid)']
  organizationId String [note: '@zod.custom(imports.cuid)']
  orgLocationId String [note: '@zod.custom(imports.cuid)']
  accessKeyId String [unique, note: '@zod.custom(imports.cuid)']
  descKeyId String [unique, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  indexes {
    (serviceId, organizationId) [unique]
    (serviceId, orgLocationId) [unique]
  }

  Note: 'Organization\'s offered services - access instructions & details
associated with service tag'
}

Table OrgReview {
  id String [pk, note: '@zod.custom(imports.cuid)']
  rating Int [not null]
  reviewText String
  visible Boolean [not null, default: true]
  organizationId String [not null, note: '@zod.custom(imports.cuid)']
  orgServiceId String [note: '@zod.custom(imports.cuid)']
  langId String [note: '@zod.custom(imports.cuid)']
  langConfidence Float [note: 'How confident is the API guess?']
  toxicity Float [note: 'From https://perspectiveapi.com/']
  lcrCity String
  lcrGovDistId String [note: '@zod.custom(imports.cuid)']
  lcrCountryId String [note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'User reviews/ratings of organization'
}

Table AttributeCategory {
  id String [pk, note: '@zod.custom(imports.cuid)']
  tag String [unique, not null]
  name String [unique, not null]
  intDesc String [note: 'Internal description']
  namespaceId String [not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Additional Properties for Org/Service.'
}

Table Attribute {
  id String [pk, note: '@zod.custom(imports.cuid)']
  tag String [unique, not null]
  name String [unique, not null]
  intDesc String [note: 'Internal description']
  categoryId String [not null, note: '@zod.custom(imports.cuid)']
  keyId String [note: '@zod.custom(imports.cuid)']
  requireText Boolean [not null, default: false]
  requireLanguage Boolean [not null, default: false]
  requireCountry Boolean [not null, default: false]
  requireSupplemental Boolean [not null, default: false]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  indexes {
    (categoryId, name) [unique]
  }
}

Table AttributeSupplement {
  id String [pk, note: '@zod.custom(imports.cuid)']
  data Json [not null, note: '@zod.custom(imports.AttributeSupplement)']
  attributeId String [not null, note: '@zod.custom(imports.cuid)']
  organizationId String [note: '@zod.custom(imports.cuid)']
  serviceId String [note: '@zod.custom(imports.cuid)']
  locationId String [note: '@zod.custom(imports.cuid)']
  serviceTagId String [note: '@zod.custom(imports.cuid)']
  serviceCategoryId String [note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table ServiceCategory {
  id String [pk, note: '@zod.custom(imports.cuid)']
  category String [unique, not null]
  keyId String [unique, not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table ServiceTag {
  id String [pk, note: '@zod.custom(imports.cuid)']
  name String [not null]
  keyId String [unique, not null, note: '@zod.custom(imports.cuid)']
  categoryId String [not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  indexes {
    (name, categoryId) [unique]
  }
}

Table PhoneType {
  id String [pk, note: '@zod.custom(imports.cuid)']
  type String [unique, not null]
  keyId String [unique, not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Phone number descriptors'
}

Table SocialMediaService {
  id String [pk, note: '@zod.custom(imports.cuid)']
  name String [unique, not null]
  urlBase String [not null]
  logoIcon String [not null]
  keyId String [unique, not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Social media service properties'
}

Table Source {
  id String [pk, note: '@zod.custom(imports.cuid)']
  source String [unique, not null]
  type SourceType [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Source of organization/user
*INTERNAL* - for tracking purposes'
}

Table Country {
  id String [pk, note: '@zod.custom(imports.cuid)']
  cca2 String [unique, not null, note: 'ISO 3166-1 alpha-2 Country code']
  cca3 String [unique, not null, note: 'ISO 3166-1 alpha-3 Country code']
  name String [unique, not null, note: 'Country name (English).']
  dialCode Int [note: 'International dialing code']
  flag String [not null, note: 'Country flag (emoji)']
  geoJSON Json [note: 'GeoJSON object - required only if this will be considered a "service area"
@zod.custom(imports.GeoJSONSchema)']
  keyId String [unique, not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Country metadata'
}

Table GovDist {
  id String [pk, note: '@zod.custom(imports.cuid)']
  name String [not null, note: 'Name (English/Roman alphabet)']
  slug String [unique, not null, note: 'Slug - [country (ISO)]-[govdist]-[...]']
  iso String [note: 'ISO-3166-2 code']
  abbrev String [note: 'Abbreviation (Optional)']
  geoJSON Json [note: 'GeoJSON object - required only if this will be considered a "service area"
@zod.custom(imports.GeoJSONSchema)']
  countryId String [not null, note: '@zod.custom(imports.cuid)']
  govDistTypeId String [not null, note: '@zod.custom(imports.cuid)']
  isPrimary Boolean [default: true, note: 'table can be used for "sub districts" (State -> County -> City)']
  parentId String [note: '@zod.custom(imports.cuid)']
  keyId String [unique, not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Administrative districts for countries'
}

Table GovDistType {
  id String [pk, note: '@zod.custom(imports.cuid)']
  name String [unique, not null]
  keyId String [unique, not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Descriptor of principal administrative districts (state, province, county, etc.)'
}

Table Language {
  id String [pk, note: '@zod.custom(imports.cuid)']
  languageName String [not null]
  localeCode String [unique, not null, note: 'ETF BCP 47 language tag']
  iso6392 String [note: 'ISO 639-2']
  nativeName String [not null, note: 'Language name in it\'s language.']
  activelyTranslated Boolean [not null, default: false, note: 'Is this language being actively used for translations?']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Languages - ETF BCP 47 language tag
top level & regional locale (ex: \'en\', "en-us", "en-ca")'
}

Table TranslationNamespace {
  id String [pk, note: '@zod.custom(imports.cuid)']
  name String [unique, not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  indexes {
    (id, name) [unique]
  }
}

Table TranslationKey {
  id String [pk, note: '@zod.custom(imports.cuid)']
  key String [not null, note: 'Item key']
  text String [not null, note: 'Base string']
  context String [note: 'Context']
  namespaceId String [not null, note: '@zod.custom(imports.cuid)']
  ns String [not null]
  parentId String [note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  indexes {
    (ns, key) [unique]
  }
}

Table OutsideAPI {
  id String [pk, note: '@zod.custom(imports.cuid)']
  name String [unique, not null]
  description String [not null]
  urlPattern String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Define outside APIs in use'
}

Table FieldVisibility {
  id String [pk, note: '@zod.custom(imports.cuid)']
  userId String [not null, note: '@zod.custom(imports.cuid)']
  firstName VisibilitySetting [not null, default: 'NONE']
  lastName VisibilitySetting [not null, default: 'NONE']
  lastNameInit VisibilitySetting [not null, default: 'NONE']
  email VisibilitySetting [not null, default: 'NONE']
  image VisibilitySetting [not null, default: 'NONE']
  ethnicity VisibilitySetting [not null, default: 'NONE']
  countryOrigin VisibilitySetting [not null, default: 'NONE']
  SOG VisibilitySetting [not null, default: 'NONE']
  communities VisibilitySetting [not null, default: 'NONE']
  currentCity VisibilitySetting [not null, default: 'NONE']
  currentGovDist VisibilitySetting [not null, default: 'NONE']
  currentCountry VisibilitySetting [not null, default: 'NONE']
  userType VisibilitySetting [not null, default: 'NONE', note: 'for specialized accounts']
  associatedOrg VisibilitySetting [not null, default: 'NONE']
  orgTitle VisibilitySetting [not null, default: 'NONE']
  createdAt VisibilitySetting [not null, default: 'NONE', note: 'to facilitate "User since..."']
  recordCreatedAt DateTime [default: `now()`, not null]
  recordupdatedAt DateTime [not null]

  Note: 'Visibilty settings for user profile pages'
}

Table Navigation {
  id String [pk, note: '@zod.custom(imports.cuid)']
  display String [not null]
  href String
  isParent Boolean [not null, default: true]
  icon String
  keyId String [unique, not null, note: '@zod.custom(imports.cuid)']
  parentId String [note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  indexes {
    (display, href) [unique]
  }

  Note: 'Define the App navigation tree
this will be used to generate a json file at build time'
}

Table FooterLink {
  id String [pk, note: '@zod.custom(imports.cuid)']
  display String [not null]
  href String [not null]
  icon String
  keyId String [unique, not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  indexes {
    (display, href) [unique]
  }
}

Table SocialMediaLink {
  id String [pk, note: '@zod.custom(imports.cuid)']
  href String [unique, not null]
  icon String [not null]
  serviceId String [not null, note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table InternalNote {
  id String [pk, note: '@zod.custom(imports.cuid)']
  text String [not null]
  attributeId String [note: '@zod.custom(imports.cuid)']
  attributeCategoryId String [note: '@zod.custom(imports.cuid)']
  attributeSupplementId String [note: '@zod.custom(imports.cuid)']
  countryId String [note: '@zod.custom(imports.cuid)']
  footerLinkId String [note: '@zod.custom(imports.cuid)']
  govDistId String [note: '@zod.custom(imports.cuid)']
  govDistTypeId String [note: '@zod.custom(imports.cuid)']
  languageId String [note: '@zod.custom(imports.cuid)']
  navigationId String [note: '@zod.custom(imports.cuid)']
  organizationId String [note: '@zod.custom(imports.cuid)']
  orgDescriptionId String [note: '@zod.custom(imports.cuid)']
  orgEmailId String [note: '@zod.custom(imports.cuid)']
  orgHoursId String [note: '@zod.custom(imports.cuid)']
  orgLocationId String [note: '@zod.custom(imports.cuid)']
  orgPhoneId String [note: '@zod.custom(imports.cuid)']
  orgPhotoId String [note: '@zod.custom(imports.cuid)']
  orgReviewId String [note: '@zod.custom(imports.cuid)']
  orgServiceId String [note: '@zod.custom(imports.cuid)']
  orgSocialMediaId String [note: '@zod.custom(imports.cuid)']
  outsideApiId String [note: '@zod.custom(imports.cuid)']
  phoneTypeId String [note: '@zod.custom(imports.cuid)']
  serviceCategoryId String [note: '@zod.custom(imports.cuid)']
  serviceTagId String [note: '@zod.custom(imports.cuid)']
  socialMediaLinkId String [note: '@zod.custom(imports.cuid)']
  socialMediaServiceId String [note: '@zod.custom(imports.cuid)']
  sourceId String [note: '@zod.custom(imports.cuid)']
  translationKeyId String [note: '@zod.custom(imports.cuid)']
  translationNamespaceId String [note: '@zod.custom(imports.cuid)']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]

  Note: 'Internal notes - multipurpose'
}

Table AuditLog {
  id String [pk, note: '@zod.custom(imports.cuid)']
  actorId String [not null, note: '@zod.custom(imports.cuid)']
  timestamp DateTime [default: `now()`, not null]
  from Json [not null]
  to Json [not null]
  table String [not null]
  recordId String [not null]
  accountId String [note: '@zod.custom(imports.cuid)']
  attributeId String [note: '@zod.custom(imports.cuid)']
  attributeCategoryId String [note: '@zod.custom(imports.cuid)']
  attributeSupplementId String [note: '@zod.custom(imports.cuid)']
  countryId String [note: '@zod.custom(imports.cuid)']
  fieldVisibilityId String [note: '@zod.custom(imports.cuid)']
  footerLinkId String [note: '@zod.custom(imports.cuid)']
  govDistId String [note: '@zod.custom(imports.cuid)']
  govDistTypeId String [note: '@zod.custom(imports.cuid)']
  internalNoteId String [note: '@zod.custom(imports.cuid)']
  languageId String [note: '@zod.custom(imports.cuid)']
  navigationId String [note: '@zod.custom(imports.cuid)']
  organizationId String [note: '@zod.custom(imports.cuid)']
  orgDescriptionId String [note: '@zod.custom(imports.cuid)']
  orgEmailId String [note: '@zod.custom(imports.cuid)']
  orgHoursId String [note: '@zod.custom(imports.cuid)']
  orgLocationId String [note: '@zod.custom(imports.cuid)']
  orgPhoneId String [note: '@zod.custom(imports.cuid)']
  orgPhotoId String [note: '@zod.custom(imports.cuid)']
  orgReviewId String [note: '@zod.custom(imports.cuid)']
  orgServiceId String [note: '@zod.custom(imports.cuid)']
  orgSocialMediaId String [note: '@zod.custom(imports.cuid)']
  outsideAPIId String [note: '@zod.custom(imports.cuid)']
  permissionAssetId String [note: '@zod.custom(imports.cuid)']
  permissionItemId String [note: '@zod.custom(imports.cuid)']
  phoneTypeId String [note: '@zod.custom(imports.cuid)']
  serviceCategoryId String [note: '@zod.custom(imports.cuid)']
  serviceTagId String [note: '@zod.custom(imports.cuid)']
  socialMediaLinkId String [note: '@zod.custom(imports.cuid)']
  socialMediaServiceId String [note: '@zod.custom(imports.cuid)']
  sourceId String [note: '@zod.custom(imports.cuid)']
  translationKeyId String [note: '@zod.custom(imports.cuid)']
  translationNamespaceId String [note: '@zod.custom(imports.cuid)']
  userId String [note: '@zod.custom(imports.cuid)']
  userCommunityId String [note: '@zod.custom(imports.cuid)']
  userEthnicityId String [note: '@zod.custom(imports.cuid)']
  userImmigrationId String [note: '@zod.custom(imports.cuid)']
  userMailId String [note: '@zod.custom(imports.cuid)']
  userRoleId String [note: '@zod.custom(imports.cuid)']
  userSavedListId String [note: '@zod.custom(imports.cuid)']
  userSOGIdentityId String [note: '@zod.custom(imports.cuid)']
  userTitleId String [note: '@zod.custom(imports.cuid)']
  userTypeId String [note: '@zod.custom(imports.cuid)']

  indexes {
    (timestamp, recordId) [unique]
  }

  Note: 'Store changes made by users'
}

Table UserToUserEthnicity {
  ethnicityId String [ref: > UserEthnicity.id]
  usersId String [ref: > User.id]
}

Table countryOrigin {
  countryoriginId String [ref: > Country.id]
  originusersId String [ref: > User.id]
}

Table UserToUserSOGIdentity {
  identifiesasId String [ref: > UserSOGIdentity.id]
  usersId String [ref: > User.id]
}

Table UserToUserCommunity {
  communitiesId String [ref: > UserCommunity.id]
  usersId String [ref: > User.id]
}

Table PermissionItemToUser {
  permissionsId String [ref: > PermissionItem.id]
  usersId String [ref: > User.id]
}

Table sharedLists {
  sharedlistsId String [ref: > UserSavedList.id]
  sharedwithId String [ref: > User.id]
}

Table AuditLogEntry {
  auditlogId String [ref: > AuditLog.id]
  userId String [ref: > User.id]
}

Table PermissionItemToUserRole {
  permissionsId String [ref: > PermissionItem.id]
  rolesId String [ref: > UserRole.id]
}

Table OrganizationToPermissionAsset {
  organizationId String [ref: > Organization.id]
  allowededitorsId String [ref: > PermissionAsset.id]
}

Table OrgLocationToPermissionAsset {
  locationId String [ref: > OrgLocation.id]
  allowededitorsId String [ref: > PermissionAsset.id]
}

Table OrganizationToUserSavedList {
  organizationsId String [ref: > Organization.id]
  userlistId String [ref: > UserSavedList.id]
}

Table AttributeToOrganization {
  attributesId String [ref: > Attribute.id]
  organizationId String [ref: > Organization.id]
}

Table AttributeToOrgLocation {
  attributesId String [ref: > Attribute.id]
  orglocationId String [ref: > OrgLocation.id]
}

Table AttributeToOrgService {
  attributesId String [ref: > Attribute.id]
  orgserviceId String [ref: > OrgService.id]
}

Table AttributeToServiceCategory {
  servicecategoryId String [ref: > ServiceCategory.id]
  defaultattributesId String [ref: > Attribute.id]
}

Table AttributeToServiceTag {
  servicetagId String [ref: > ServiceTag.id]
  defaultattributesId String [ref: > Attribute.id]
}

Enum UserSavedListVisibility {
  PRIVATE
  SHARED_USER
  SHARED_LINK
  PUBLIC
}

Enum SourceType {
  EXTERNAL
  ORGANIZATION
  SYSTEM
  USER
}

Enum VisibilitySetting {
  NONE
  LOGGED_IN
  PROVIDER
  PUBLIC
}

Ref: Account.userId > User.id [delete: Cascade]

Ref: Session.userId > User.id [delete: Cascade]

Ref: User.currentGovDistId > GovDist.id

Ref: User.currentCountryId > Country.id

Ref: User.immigrationId > UserImmigration.id

Ref: User.roleId > UserRole.id

Ref: User.userTypeId > UserType.id

Ref: User.langPrefId > Language.id

Ref: User.sourceId > Source.id

Ref: User.associatedOrgId > Organization.id

Ref: User.orgTitleId > UserTitle.id

Ref: PermissionAsset.userId > User.id

Ref: PermissionAsset.permissionId > PermissionItem.id

Ref: UserType.keyId > TranslationKey.id

Ref: UserTitle.keyId > TranslationKey.id

Ref: UserEthnicity.keyId > TranslationKey.id

Ref: UserImmigration.keyId > TranslationKey.id

Ref: UserSOGIdentity.keyId > TranslationKey.id

Ref: UserCommunity.keyId > TranslationKey.id

Ref: UserSavedList.ownedById > User.id

Ref: UserMail.toUserId > User.id

Ref: UserMail.fromUserId > User.id

Ref: Organization.outsideApiId > OutsideAPI.id

Ref: Organization.sourceId > Source.id

Ref: OrgDescription.orgId > Organization.id

Ref: OrgDescription.keyId > TranslationKey.id

Ref: OrgEmail.titleId > UserTitle.id

Ref: OrgEmail.orgId > Organization.id

Ref: OrgEmail.userId - User.id

Ref: OrgEmail.orgLocationId > OrgLocation.id

Ref: OrgPhone.countryId > Country.id

Ref: OrgPhone.phoneTypeId > PhoneType.id

Ref: OrgPhone.organizationId > Organization.id

Ref: OrgPhone.userId - User.id

Ref: OrgPhone.orgLocationId > OrgLocation.id

Ref: OrgSocialMedia.serviceId > SocialMediaService.id

Ref: OrgSocialMedia.organizationId > Organization.id

Ref: OrgSocialMedia.orgLocationId > OrgLocation.id

Ref: OrgLocation.govDistId > GovDist.id

Ref: OrgLocation.countryId > Country.id

Ref: OrgLocation.orgId > Organization.id

Ref: OrgLocation.outsideApiId > OutsideAPI.id

Ref: OrgPhoto.orgId > Organization.id

Ref: OrgPhoto.orgLocationId > OrgLocation.id

Ref: OrgHours.orgLocId > OrgLocation.id

Ref: OrgHours.orgServiceId > OrgService.id

Ref: OrgService.serviceId > ServiceTag.id

Ref: OrgService.organizationId > Organization.id

Ref: OrgService.orgLocationId > OrgLocation.id

Ref: OrgService.accessKeyId > TranslationKey.id

Ref: OrgService.descKeyId > TranslationKey.id

Ref: OrgReview.organizationId > Organization.id

Ref: OrgReview.orgServiceId > OrgService.id

Ref: OrgReview.langId > Language.id

Ref: OrgReview.lcrGovDistId > GovDist.id

Ref: OrgReview.lcrCountryId > Country.id

Ref: AttributeCategory.namespaceId > TranslationNamespace.id

Ref: Attribute.categoryId > AttributeCategory.id

Ref: Attribute.keyId > TranslationKey.id

Ref: AttributeSupplement.attributeId > Attribute.id

Ref: AttributeSupplement.organizationId > Organization.id

Ref: AttributeSupplement.serviceId > OrgService.id

Ref: AttributeSupplement.locationId > OrgLocation.id

Ref: AttributeSupplement.serviceTagId > ServiceTag.id

Ref: AttributeSupplement.serviceCategoryId > ServiceCategory.id

Ref: ServiceCategory.keyId > TranslationKey.id

Ref: ServiceTag.keyId > TranslationKey.id

Ref: ServiceTag.categoryId > ServiceCategory.id

Ref: PhoneType.keyId > TranslationKey.id

Ref: SocialMediaService.keyId > TranslationKey.id

Ref: Country.keyId > TranslationKey.id

Ref: GovDist.countryId > Country.id

Ref: GovDist.govDistTypeId > GovDistType.id

Ref: GovDist.parentId - GovDist.id

Ref: GovDist.keyId > TranslationKey.id

Ref: GovDistType.keyId > TranslationKey.id

Ref: TranslationKey.(namespaceId, ns) > TranslationNamespace.(id, name)

Ref: TranslationKey.parentId - TranslationKey.id

Ref: FieldVisibility.userId > User.id

Ref: Navigation.keyId > TranslationKey.id

Ref: Navigation.parentId - Navigation.id

Ref: FooterLink.keyId > TranslationKey.id

Ref: SocialMediaLink.serviceId > SocialMediaService.id

Ref: InternalNote.attributeId > Attribute.id

Ref: InternalNote.attributeCategoryId > AttributeCategory.id

Ref: InternalNote.attributeSupplementId > AttributeSupplement.id

Ref: InternalNote.countryId > Country.id

Ref: InternalNote.footerLinkId > FooterLink.id

Ref: InternalNote.govDistId > GovDist.id

Ref: InternalNote.govDistTypeId > GovDistType.id

Ref: InternalNote.languageId > Language.id

Ref: InternalNote.navigationId > Navigation.id

Ref: InternalNote.organizationId > Organization.id

Ref: InternalNote.orgDescriptionId > OrgDescription.id

Ref: InternalNote.orgEmailId > OrgEmail.id

Ref: InternalNote.orgHoursId > OrgHours.id

Ref: InternalNote.orgLocationId > OrgLocation.id

Ref: InternalNote.orgPhoneId > OrgPhone.id

Ref: InternalNote.orgPhotoId > OrgPhoto.id

Ref: InternalNote.orgReviewId > OrgReview.id

Ref: InternalNote.orgServiceId > OrgService.id

Ref: InternalNote.orgSocialMediaId > OrgSocialMedia.id

Ref: InternalNote.outsideApiId > OutsideAPI.id

Ref: InternalNote.phoneTypeId > PhoneType.id

Ref: InternalNote.serviceCategoryId > ServiceCategory.id

Ref: InternalNote.serviceTagId > ServiceTag.id

Ref: InternalNote.socialMediaLinkId > SocialMediaLink.id

Ref: InternalNote.socialMediaServiceId > SocialMediaService.id

Ref: InternalNote.sourceId > Source.id

Ref: InternalNote.translationKeyId > TranslationKey.id

Ref: InternalNote.translationNamespaceId > TranslationNamespace.id

Ref: AuditLog.actorId > User.id

Ref: AuditLog.accountId > Account.id

Ref: AuditLog.attributeId > Attribute.id

Ref: AuditLog.attributeCategoryId > AttributeCategory.id

Ref: AuditLog.attributeSupplementId > AttributeSupplement.id

Ref: AuditLog.countryId > Country.id

Ref: AuditLog.fieldVisibilityId > FieldVisibility.id

Ref: AuditLog.footerLinkId > FooterLink.id

Ref: AuditLog.govDistId > GovDist.id

Ref: AuditLog.govDistTypeId > GovDistType.id

Ref: AuditLog.internalNoteId > InternalNote.id

Ref: AuditLog.languageId > Language.id

Ref: AuditLog.navigationId > Navigation.id

Ref: AuditLog.organizationId > Organization.id

Ref: AuditLog.orgDescriptionId > OrgDescription.id

Ref: AuditLog.orgEmailId > OrgEmail.id

Ref: AuditLog.orgHoursId > OrgHours.id

Ref: AuditLog.orgLocationId > OrgLocation.id

Ref: AuditLog.orgPhoneId > OrgPhone.id

Ref: AuditLog.orgPhotoId > OrgPhoto.id

Ref: AuditLog.orgReviewId > OrgReview.id

Ref: AuditLog.orgServiceId > OrgService.id

Ref: AuditLog.orgSocialMediaId > OrgSocialMedia.id

Ref: AuditLog.outsideAPIId > OutsideAPI.id

Ref: AuditLog.permissionAssetId > PermissionAsset.id

Ref: AuditLog.permissionItemId > PermissionItem.id

Ref: AuditLog.phoneTypeId > PhoneType.id

Ref: AuditLog.serviceCategoryId > ServiceCategory.id

Ref: AuditLog.serviceTagId > ServiceTag.id

Ref: AuditLog.socialMediaLinkId > SocialMediaLink.id

Ref: AuditLog.socialMediaServiceId > SocialMediaService.id

Ref: AuditLog.sourceId > Source.id

Ref: AuditLog.translationKeyId > TranslationKey.id

Ref: AuditLog.translationNamespaceId > TranslationNamespace.id

Ref: AuditLog.userCommunityId > UserCommunity.id

Ref: AuditLog.userEthnicityId > UserEthnicity.id

Ref: AuditLog.userImmigrationId > UserImmigration.id

Ref: AuditLog.userMailId > UserMail.id

Ref: AuditLog.userRoleId > UserRole.id

Ref: AuditLog.userSavedListId > UserSavedList.id

Ref: AuditLog.userSOGIdentityId > UserSOGIdentity.id

Ref: AuditLog.userTitleId > UserTitle.id

Ref: AuditLog.userTypeId > UserType.id