// eslint-disable-next-line @typescript-eslint/triple-slash-reference
/// <reference path=".snaplet/snaplet.d.ts" />
// This config was generated by Snaplet make sure to check it over before using it.
import { copycat } from '@snaplet/copycat'
import { defineConfig } from 'snaplet'

type SnapletConfig = ReturnType<typeof defineConfig>

type SystemTableArray = NonNullable<SnapletConfig['subset']>['targets'][number]['table'][]

type SystemTableSubset = {
	table: NonNullable<SnapletConfig['subset']>['targets'][number]['table']
	percent: number
}

const systemTables = [
	'public.Attribute',
	'public.AttributeCategory',
	'public.AttributeNesting',
	'public.AttributeSupplementDataSchema',
	'public.AttributeToCategory',
	'public.Country',
	'public.DataMigration',
	'public.GeoData',
	'public.GovDist',
	'public.GovDistType',
	'public.Language',
	'public.Permission',
	'public.PhoneType',
	'public.RolePermission',
	'public.ServiceCategory',
	'public.ServiceCategoryDefaultAttribute',
	'public.ServiceTag',
	'public.ServiceTagCountry',
	'public.ServiceTagDefaultAttribute',
	'public.ServiceTagNesting',
	'public.ServiceTagToCategory',
	'public.SocialMediaService',
	'public.Source',
	'public.TranslationNamespace',
	'public.UserCommunity',
	'public.UserEthnicity',
	'public.UserImmigration',
	'public.UserRole',
	'public.UserSOGIdentity',
	'public.UserTitle',
	'public.UserType',
	'public._prisma_migrations',
	'public.spatial_ref_sys',
] as const

const subsetSystemTables = systemTables.map((table) => ({ table, percent: 100 }))

copycat.setHashKey('9YCsurj2Ye9gfmHV')
export default defineConfig({
	select: {
		public: {
			$default: true,
			AuditTrail: 'structure',
		},
	},
	transform: {
		$mode: 'unsafe',
		public: {
			Account({ row }) {
				return {
					id_token: copycat.uuid(row.id_token),
					access_token: copycat.uuid(row.access_token),
					refresh_token: copycat.uuid(row.refresh_token),
				}
			},
			OrgEmail({ row }) {
				return {
					firstName: copycat.firstName(row.firstName),
					lastName: copycat.lastName(row.lastName),
					email: copycat.email(row.email),
					titleId: copycat.fullName(row.titleId),
				}
			},
			User({ row }) {
				return {
					name: copycat.fullName(row.name),
					email: copycat.email(row.email),
				}
			},
		},
	},
	subset: {
		enabled: true,
		version: '3',
		targets: [
			{
				table: 'public.Organization',
				percent: 25,
			},
			{
				table: 'public.User',
				percent: 25,
			},
			{
				table: 'public.Account',
				percent: 0,
			},
			...subsetSystemTables,
		],
		keepDisconnectedTables: true,
		followNullableRelations: true,
		maxCyclesLoop: 0,
		eager: true,
		taskSortAlgorithm: 'children',
	},
})
